name: CI
on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
    tags: '*'
jobs:
  test:
    name: Julia ${{ matrix.version }} - Python ${{ matrix.python }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.6' # Replace this with the minimum Julia version that your package supports. E.g. if your package requires Julia 1.5 or higher, change this to '1.5'.
          - '1' # Leave this line unchanged. '1' will automatically expand to the latest stable 1.x release of Julia.
          - 'nightly'
        python: [3.7]
        os:
          - ubuntu-latest
          - windows-latest
            #- macOS-latest # issue with libmkl location
        arch:
          - x64
    steps:
      - uses: actions/checkout@v2
      # Python Tasks
      - name: Setup ${{ matrix.python }}
        uses: actions/setup-python@v2
        with: 
          python-version: ${{ matrix.python }}

      - name: Display Python Version
        run: python -c "import sys; print(sys.version)"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install numpy scipy sklearn lale

      # Julia Tasks
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}

      - uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-

      - uses: julia-actions/julia-buildpkg@v1
        env: 
          PYTHON: Conda
      - uses: julia-actions/julia-runtest@v1
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v1
        with:
          file: lcov.info
          #  docs:
          #    name: Documentation
          #    runs-on: ubuntu-latest
          #    steps:
          #      - uses: actions/checkout@v2
          #      - name: Setup python
          #        uses: actions/setup-python@v2
          #        with:
          #          python-version: 3.7
          #      - name: Set ENV Variables in Python
          #        run: |
          #          echo ENV["PYTHON"] = Conda >> $GITHUB_ENV
          #
          #      - name: Install APT packages
          #        run: sudo apt-get install python3-numpy python3-scipy
          #
          #      - name: Install dependencies
          #        run: |
          #          python -m pip install --upgrade pip
          #          pip install numpy scipy sklearn lale
          #       
          #      - uses: julia-actions/setup-julia@v1
          #        with:
          #          version: '1'
          #        env: 
          #          PYTHON: Conda
          #      - run: |
          #          julia --project=docs -e '
          #            using Pkg
          #            Pkg.develop(PackageSpec(path=pwd()))
          #            Pkg.instantiate()'
          #      - run: |
          #          julia --project=docs -e '
          #            using Documenter: doctest
          #            using Lale
          #            doctest(Lale)' # change MYPACKAGE to the name of your package
          #      - run: julia --project=docs docs/make.jl
          #        env:
          #          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          #          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
